{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Telegram Chat"
          },
          "Parameters": [
            "TelegramChatId",
            "TelegramToken",
            "TelegramUsername"
          ]
        }
      ],
      "ParameterLabels": {
        "TelegramChatId": {
          "default": "Command center chat id"
        },
        "TelegramToken": {
          "default": "Telegram bot token"
        },
        "TelegramUsername": {
          "default": "Your Telegram username"
        }
      }
    }
  },
  "Parameters": {
    "TelegramNotificationChatId": {
      "Type": "String",
      "Default": "",
      "AllowedPattern" : "(-?[0-9]+)?",
      "Description": "Telegram chat id to use for commands f.e. 1234567890"
    },
    "TelegramNotificationToken": {
      "Type": "String",
      "Default": "",
      "AllowedPattern" : "([0-9]{10}:.*)?",
      "Description": "Token of the telegram bot to use for your command center f.e. 1112345576:AAGsample-token-telegram-aqQ6l1b1SM"
    },
    "TelegramUsername": {
      "Type": "String",
      "Default": "",
      "AllowedPattern" : "(-?[0-9]+)?",
      "Description": "Your Telegram username to verify that the command was sent by you. (Important without @)"
    }
  },
  "Conditions": {
    "CreateTelegram": {
      "Fn::And": [
        {
          "Fn::Not": [
            {
              "Fn::Equals": [
                {
                  "Ref": "TelegramChatId"
                },
                ""
              ]
            }
          ]
        },
        {
          "Fn::Not": [
            {
              "Fn::Equals": [
                {
                  "Ref": "TelegramToken"
                },
                ""
              ]
            }
          ]
        },
        {
          "Fn::Not": [
            {
              "Fn::Equals": [
                {
                  "Ref": "TelegramUsername"
                },
                ""
              ]
            }
          ]
        }
      ]
    }
  },
  "Resources": {
    "commandCenterRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "CommandCenterPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "ssm:Describe*",
                    "ssm:Get*",
                    "ssm:List*"
                  ],
                  "Resource": {
                    "Fn::Join": [
                      ":",
                      [
                        "arn:aws:ssm",
                        {
                          "Ref": "AWS::Region"
                        },
                        {
                          "Ref": "AWS::AccountId"
                        },
                        "parameter/defichain-maxi*/command-center*",
                        "arn:aws:ssm",
                        {
                          "Ref": "AWS::Region"
                        },
                        {
                          "Ref": "AWS::AccountId"
                        },
                        "parameter/defichain-maxi*/state"
                      ]
                    ]
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "ssm:PutParameter"
                  ],
                  "Resource": {
                    "Fn::Join": [
                      ":",
                      [
                        "arn:aws:ssm",
                        {
                          "Ref": "AWS::Region"
                        },
                        {
                          "Ref": "AWS::AccountId"
                        },
                        "parameter/defichain-maxi*/command-center/last-executed-message-id",
                        "arn:aws:ssm",
                        {
                          "Ref": "AWS::Region"
                        },
                        {
                          "Ref": "AWS::AccountId"
                        },
                        "parameter/defichain-maxi*/skip",
                        "arn:aws:ssm",
                        {
                          "Ref": "AWS::Region"
                        },
                        {
                          "Ref": "AWS::AccountId"
                        },
                        "parameter/defichain-maxi*/settings/max-collateral-ratio",
                        "arn:aws:ssm",
                        {
                          "Ref": "AWS::Region"
                        },
                        {
                          "Ref": "AWS::AccountId"
                        },
                        "parameter/defichain-maxi*/settings/min-collateral-ratio",
                        "arn:aws:ssm",
                        {
                          "Ref": "AWS::Region"
                        },
                        {
                          "Ref": "AWS::AccountId"
                        },
                        "parameter/defichain-maxi*/lm-token",
                        "arn:aws:ssm",
                        {
                          "Ref": "AWS::Region"
                        },
                        {
                          "Ref": "AWS::AccountId"
                        },
                        "parameter/defichain-maxi*/reinvest"
                      ]
                    ]
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "lambda:InvokeFunction"
                  ],
                  "Resource": {
                    "Fn::Join": [
                      ":",
                      [
                        "arn:aws:ssm",
                        {
                          "Ref": "AWS::Region"
                        },
                        {
                          "Ref": "AWS::AccountId"
                        },
                        "function:defichain-maxi*"
                      ]
                    ]
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "commandCenterTrigger": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Name": "commandCenterTrigger",
        "Description": "Triggers your vault maxis' command center",
        "ScheduleExpression": "rate(1 minutes)",
        "Targets": [
          {
            "Id": "commandCenterTarget",
            "Arn": {
              "Fn::GetAtt": [
                "commandCenterLambda",
                "Arn"
              ]
            }
          }
        ],
        "State": "ENABLED"
      }
    },
    "commandCenterTriggerInvokeLambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "commandCenterLambda"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "commandCenterTrigger",
            "Arn"
          ]
        }
      }
    },
    "commandCenterLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": "defichain-vault-maxi-command-center",
        "Handler": "index.main",
        "Role": {
          "Fn::GetAtt": [
            "commandCenterRole",
            "Arn"
          ]
        },
        "Code": {
          "S3Bucket": {"Fn::Sub": "defichain-maxi-public-${AWS::Region}"},
          "S3Key": "command-center-1-0.zip"
        },
        "Runtime": "nodejs14.x",
        "Timeout": 900
      }
    },
    "commandCenterParamTelegramChatId": {
      "Type": "AWS::SSM::Parameter",
      "Condition": "CreateTelegram",
      "Properties": {
        "DataType": "text",
        "Description": "Telegram chat id for commands",
        "Name": "/defichain-maxi/command-center/telegram/chat-id",
        "Type": "String",
        "Value": {
          "Ref": "TelegramChatId"
        }
      }
    },
    "commandCenterParamTelegramToken": {
      "Type": "AWS::SSM::Parameter",
      "Condition": "CreateTelegram",
      "Properties": {
        "DataType": "text",
        "Description": "Telegram bot token for command center",
        "Name": "/defichain-maxi/command-center/telegram/token",
        "Type": "String",
        "Value": {
          "Ref": "TelegramToken"
        }
      }
    },
    "commandCenterParamTelegramUsername": {
      "Type": "AWS::SSM::Parameter",
      "Condition": "CreateTelegram",
      "Properties": {
        "DataType": "text",
        "Description": "Your Telegram username to verify sent commands",
        "Name": "/defichain-maxi/command-center/telegram/username",
        "Type": "String",
        "Value": {
          "Ref": "TelegramUsername"
        }
      }
    },
    "commandCenterParamLastExecutedMessageId": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "DataType": "text",
        "Description": "message id of last execution. DO NOT CHANGE THIS VALUE",
        "Name": "/defichain-maxi/command-center/last-executed-message-id",
        "Type": "String",
        "Value": "0"
      }
    }
  }
}